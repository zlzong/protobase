#include "codecs/LengthFieldBasedFrameDecoder.h"
#include "net/EventLoopThread.h"
#include "net/InetAddress.h"
#include "net/TcpClient.h"
#include "net/EventLoop.h"

EventLoopThread eventLoopThread;

int main() {
    LengthFieldBasedFrameDecoder lengthFieldBasedFrameDecoder{1417,5,5,13,2};
    EventLoop *pLoop = eventLoopThread.startLoop();
    InetAddress inetAddress(9999, "192.168.86.183");
    TcpClient client(pLoop,inetAddress,"test");
    uint8_t raw_data[] = {
        0xA5,0x5A,0x32,0x00,0x31,0x32,0x33,0x34,0x35,0x37,0x37,0x38,0x39,0x30,0x31,0x32,
        0x33,0x34,0x35,0x36,0x37,0x09,0xC1,0x01,0x04,0x82,0x3A,0x67,0xCD,0xCC,0x44,0x41,
        0x00,0x00,0x80,0x3F,0x00,0x00,0x80,0x3F,0x00,0x0A,0x00,0x00,0x00,0x0A,0x00,0x00,
        0x00,0x00,0x34,0xA2,0x7E,0x62,0x78,0x50,0x1C,0x07,0x01,0x02,0x03,0x0A,0x00,0x00,
        0x80,0x3F,0x00,0x00,0x80,0x3F,0x00,0x00,0x80,0x3F,0x04,0x4B,0x96,
    };

    client.setMessageCallback([&](const ConnectionPtr &connection, Buffer *message, Timestamp timestamp) {
        std::cout << message->readAllAsHexString() << std::endl;
    });

    client.setConnectionCallback([&](const ConnectionPtr & connection) {
        connection->send(raw_data, sizeof(raw_data));
        connection->setDecoder(lengthFieldBasedFrameDecoder);
    });

    client.enableRetry();
    client.clientConnect();

    std::this_thread::sleep_for(std::chrono::seconds(1000));
}